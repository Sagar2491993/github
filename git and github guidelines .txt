gitgit hub id and passward 
id = sagarabhang93@gmail.com
password = PiNu19@$

git download and install



A.  create roject repo   # https://github.com/Sagar2491993/github.git
B.  open git bash
C.   git config --global user.email "sagarabhang93@gmail.com"
D.   git config --global user.name "Sagar2491993"    # it git username

# first time comand
1. git init
2. git status
3. git add .
4. git status
5. git commit -m " file regarding commit"
6. git branch -M main
7. git remote add origin https://github.com/Sagar2491993/github.git  # (copy and paste)
8. git push -u origin main

# git and github connect 
#########################################################################################
# new file add in repo
# first after comand

1. git status
2. git add .
3. git status
4. git commit -m "git commit"
5. git push -u origin main   # git push (use only)

##########################################################################################
# vs code  and github connect

# vs code in install = github pull request and issues
# log in github in vs code = account > setting and synchrouns > sing with in github > continue > open github
                            > account in show github log in 

# create repo = vs code in source control > intionlize repository (create repo init in folder) 

# so if any create fine and will be >source control notification
                                    (commit the file means file in all changes share the in repository)
                     > changes + (select file example git add .) > file select show the changes code before and after
                     # (commit the file means file in all changes share the in repository)
                     > commit msg > right sing (reall change in curent file in udating code)

# add remote github repo> ...click > remote > add remote> git hub repo url paste > enter (show interminal in $git add repo)
                               > write remote name ie. origin
# push file in repo = publish push otherwise (terminal in git push origin)

#################################################################################################
# crete  branch and marge to master
> github repo in create branch (master click write branch name after branck name click) 

# maste move to branch = >as
                        > git branch  # o/p sagar , rushi
                        > git checkout branch name # git checkout rushi 
                        > git add .
                        > git commit -m "msg"
                        > git push origin rushi
# refresh github select > branch > compare pull request> 
                                 > open pull request (Add a title,  Add a description) > creat pull request
                                 > finish you review (commit , approvel, change request) > submit review
# refresh > master select > file changes check in code (+ = add code,   - = reduce code) >  (code check in + (comment)) > add new comment (not use single comment)
# after branch will be work again share again pull request  (2nd option (branch .pull request > new pull request > 
                                                             edit 1st main, 2nd branch > cretae pull request > >open a pull request
                                                             > add title , add descrition > create pull request)
# maste approvel time > pull request> select pull file >check file changes ( any wrong to again reply otherwise )  > create marge commit ( checkout rushi through  git merge main)
                                                       > close pull request


#############################################################################################
# externam repo delpoy in local system
> pwd (present work directory)

>   git config --global user.email "sagarabhang93@gmail.com"
>   git config --global user.name "Sagar2491993"    # it git username


> git clone paste external repo url
  # work create new file , update code

> git staus
> git add.
> git status

> git commit -m "msg"
> git push origin master

###########################################################################################
# ignore file means not share file in repo

> git init
> git status

# ingone file not show in status
      > create ile (.gitignore) > in the write ignore file name (i.e.  .log) but large files so direct use in *.log, *java, *py
                                                folder ignore (1.e.  demo folder) .gitignore > demo/
> git status
             






